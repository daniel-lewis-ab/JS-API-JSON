[
  {
    "name": "Symbol()",
    "description": "Creates a new Symbol object. It is not a constructor in the traditional sense, because it can only be called as a function, instead of being constructed with new Symbol().",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/Symbol",
    "parameters": [
      {
        "name": "description",
        "optional": true,
        "description": "A string. A description of the symbol which can be used for debugging but not to\n      access the symbol itself."
      }
    ]
  },
  {
    "name": "Symbol.asyncIterator",
    "description": "A method that returns the default AsyncIterator for an object. Used by for await...of.",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/asyncIterator",
    "parameters": []
  },
  {
    "name": "Symbol.hasInstance",
    "description": "A method determining if a constructor object recognizes an object as its instance. Used by instanceof.",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/hasInstance",
    "parameters": []
  },
  {
    "name": "Symbol.isConcatSpreadable",
    "description": "A Boolean value indicating if an object should be flattened to its array elements. Used by Array.prototype.concat().",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/isConcatSpreadable",
    "parameters": []
  },
  {
    "name": "Symbol.iterator",
    "description": "A method returning the default iterator for an object. Used by for...of.",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/iterator",
    "parameters": []
  },
  {
    "name": "Symbol.match",
    "description": "A method that matches against a string, also used to determine if an object may be used as a regular expression. Used by String.prototype.match().",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/match",
    "parameters": []
  },
  {
    "name": "Symbol.matchAll",
    "description": "A method that returns an iterator, that yields matches of the regular expression against a string. Used by String.prototype.matchAll().",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/matchAll",
    "parameters": []
  },
  {
    "name": "Symbol.replace",
    "description": "A method that replaces matched substrings of a string. Used by String.prototype.replace().",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/replace",
    "parameters": []
  },
  {
    "name": "Symbol.search",
    "description": "A method that returns the index within a string that matches the regular expression. Used by String.prototype.search().",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/search",
    "parameters": []
  },
  {
    "name": "Symbol.species",
    "description": "A constructor function that is used to create derived objects.",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/species",
    "parameters": []
  },
  {
    "name": "Symbol.split",
    "description": "A method that splits a string at the indices that match a regular expression. Used by String.prototype.split().",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/split",
    "parameters": []
  },
  {
    "name": "Symbol.toPrimitive",
    "description": "A method converting an object to a primitive value.",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toPrimitive",
    "parameters": []
  },
  {
    "name": "Symbol.toStringTag",
    "description": "A string value used for the default description of an object. Used by Object.prototype.toString().",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toStringTag",
    "parameters": []
  },
  {
    "name": "Symbol.unscopables",
    "description": "An object value of whose own and inherited property names are excluded from the with environment bindings of the associated object.",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/unscopables",
    "parameters": []
  },
  {
    "name": "Symbol.for()",
    "description": "Searches for existing Symbols with the given key and returns it if found. Otherwise a new Symbol gets created in the global Symbol registry with key.",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/for",
    "return_value": "An existing symbol with the given key if found; otherwise, a new symbol is created and\n  returned.",
    "parameters": [
      {
        "name": "key",
        "optional": false,
        "description": "String, required. The key for the symbol (and also used for the description of the\n      symbol)."
      }
    ]
  },
  {
    "name": "Symbol.keyFor()",
    "description": "Retrieves a shared Symbol key from the global Symbol registry for the given Symbol.",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/keyFor",
    "return_value": "A string representing the key for the given symbol if one is found on the global registry; otherwise, undefined.",
    "parameters": [
      {
        "name": "sym",
        "optional": false,
        "description": "Symbol, required. The symbol to find a key for."
      }
    ]
  },
  {
    "name": "Symbol.prototype.constructor",
    "description": "The constructor function that created the instance object. For Symbol instances, the initial value is the Symbol constructor.",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor",
    "parameters": []
  },
  {
    "name": "Symbol.prototype.description",
    "description": "A read-only string containing the description of the Symbol.",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/description",
    "parameters": []
  },
  {
    "name": "Symbol.prototype[@@toStringTag]",
    "description": "The initial value of the @@toStringTag property is the string \"Symbol\". This property is used in Object.prototype.toString(). However, because Symbol also has its own toString() method, this property is not used unless you call Object.prototype.toString.call() with a symbol as thisArg.",
    "link": "https://developer.mozilla.org/#symbol.prototypetostringtag",
    "parameters": []
  },
  {
    "name": "Symbol.prototype.toString()",
    "description": "Returns a string containing the description of the Symbol. Overrides the Object.prototype.toString() method.",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/toString",
    "return_value": "A string representing the specified symbol value.",
    "parameters": []
  },
  {
    "name": "Symbol.prototype.valueOf()",
    "description": "Returns the Symbol. Overrides the Object.prototype.valueOf() method.",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/valueOf",
    "return_value": "The primitive value of the specified Symbol object.",
    "parameters": []
  },
  {
    "name": "Symbol.prototype[@@toPrimitive]()",
    "description": "Returns the Symbol.",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol/@@toPrimitive",
    "return_value": "The primitive value of the specified Symbol object.",
    "parameters": [
      {
        "name": "hint",
        "optional": false,
        "description": "A string value indicating the primitive value to return. The value is ignored."
      }
    ]
  }
]
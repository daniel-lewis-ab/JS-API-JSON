[
  {
    "name": "JSON[@@toStringTag]",
    "description": "The initial value of the @@toStringTag property is the string \"JSON\". This property is used in Object.prototype.toString().",
    "link": "https://developer.mozilla.org/#jsontostringtag",
    "parameters": []
  },
  {
    "name": "JSON.parse()",
    "description": "Parse a piece of string text as JSON, optionally transforming the produced value and its properties, and return the value.",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse",
    "return_value": "The Object, Array, string, number, boolean, or null value corresponding to the given JSON text.",
    "parameters": [
      {
        "name": "text",
        "optional": false,
        "description": "The string to parse as JSON. See the JSON object for a description of JSON syntax."
      },
      {
        "name": "reviver",
        "optional": true,
        "description": "If a function, this prescribes how each value originally produced by parsing is transformed before being returned. Non-callable values are ignored. The function is called with the following arguments:\n\nkey\n\nThe key associated with the value.\n\nvalue\n\nThe value produced by parsing."
      },
      {
        "name": "key",
        "optional": false,
        "description": "The key associated with the value."
      },
      {
        "name": "value",
        "optional": false,
        "description": "The value produced by parsing."
      },
      {
        "name": "SyntaxError",
        "optional": false,
        "description": "Thrown if the string to parse is not valid JSON."
      }
    ]
  },
  {
    "name": "JSON.stringify()",
    "description": "Return a JSON string corresponding to the specified value, optionally including only certain properties or replacing property values in a user-defined manner.",
    "link": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify",
    "return_value": "A JSON string representing the given value, or undefined.",
    "parameters": [
      {
        "name": "value",
        "optional": false,
        "description": "The value to convert to a JSON string."
      },
      {
        "name": "replacer",
        "optional": true,
        "description": "A function that alters the behavior of the stringification process, or an array of strings and numbers that specifies properties of value to be included in the output. If replacer is an array, all elements in this array that are not strings or numbers (either primitives or wrapper objects), including Symbol values, are completely ignored. If replacer is anything other than a function or an array (e.g. null or not provided), all string-keyed properties of the object are included in the resulting JSON string."
      },
      {
        "name": "space",
        "optional": true,
        "description": "A string or number that's used to insert white space (including indentation, line break characters, etc.) into the output JSON string for readability purposes.\nIf this is a number, it indicates the number of space characters to be used as indentation, clamped to 10 (that is, any number greater than 10 is treated as if it were 10). Values less than 1 indicate that no space should be used.\nIf this is a string, the string (or the first 10 characters of the string, if it's longer than that) is inserted before every nested object or array.\nIf space is anything other than a string or number (can be either a primitive or a wrapper object) \u00e2\u0080\u0094 for example, is null or not provided \u00e2\u0080\u0094 no white space is used."
      },
      {
        "name": "TypeError",
        "optional": false,
        "description": "Thrown in one of the following cases:\n\nvalue contains a circular reference.\nA BigInt value is encountered."
      }
    ]
  }
]